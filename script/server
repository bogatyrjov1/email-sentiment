#!/bin/bash

# Include conf
source $(dirname $0)/../conf/conf_docker

# Change current dir to root
DIR=$(cd $( dirname $0 )/.. && pwd)
cd ${DIR}

# Create docker network
if ! [ $(docker network ls -qf name=${NETWORK_NAME}) ]; then
    echo "Creating ${NETWORK_NAME} docker network"
    docker network create ${NETWORK_NAME}
else
    echo "Docker network ${NETWORK_NAME} already created"
fi

# Run db docker container
if [ -z "$(docker ps -qaf name=${DB_CONTAINER_NAME})" ]; then
    echo "Running ${DB_CONTAINER_NAME} docker container"
    docker run --name ${DB_CONTAINER_NAME} -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d --network ${NETWORK_NAME} mariadb
elif [ -z "$(docker ps -qf name=${DB_CONTAINER_NAME})" ]; then
    echo "Starting ${DB_CONTAINER_NAME} docker container"
    docker start ${DB_CONTAINER_NAME}
else
    echo "Docker container ${DB_CONTAINER_NAME} is already running"
fi

# Run app docker container
if [ -z "$(docker ps -qaf name=${APP_CONTAINER_NAME})" ]; then
    echo "Running ${APP_CONTAINER_NAME} docker container"
    docker run -it --name ${APP_CONTAINER_NAME} -p 8888:8888 -p 6006:6006 -v ${DIR}:/root/email-sentiment -e CONF_SANDBOX=/root/email-sentiment/conf/conf_sandbox.yml -d --network ${NETWORK_NAME} floydhub/dl-docker:cpu bash
elif  [ -z "$(docker ps -qf name=${APP_CONTAINER_NAME}$)" ]; then
    echo "Starting ${APP_CONTAINER_NAME} docker container"
    docker start ${APP_CONTAINER_NAME}
else
    echo "Docker container ${APP_CONTAINER_NAME} is already running"
fi

if [ $? != 0 ]; then exit 1; fi
